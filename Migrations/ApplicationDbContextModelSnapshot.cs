// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecetteManager.Data;

#nullable disable

namespace RecetteManager.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("RecetteManager.Models.Categorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("RecetteManager.Models.Commentaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RecetteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RecetteId");

                    b.ToTable("Commentaires");
                });

            modelBuilder.Entity("RecetteManager.Models.Etape", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RecetteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RecetteId");

                    b.ToTable("Etapes");
                });

            modelBuilder.Entity("RecetteManager.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RecetteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RecetteId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("RecetteManager.Models.Recette", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CategorieId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Difficulte")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TempsCuisson")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TempsPrep")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CategorieId");

                    b.ToTable("Recettes");
                });

            modelBuilder.Entity("RecetteManager.Models.Commentaire", b =>
                {
                    b.HasOne("RecetteManager.Models.Recette", "Recette")
                        .WithMany("Commentaires")
                        .HasForeignKey("RecetteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recette");
                });

            modelBuilder.Entity("RecetteManager.Models.Etape", b =>
                {
                    b.HasOne("RecetteManager.Models.Recette", "Recette")
                        .WithMany("Etapes")
                        .HasForeignKey("RecetteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recette");
                });

            modelBuilder.Entity("RecetteManager.Models.Ingredient", b =>
                {
                    b.HasOne("RecetteManager.Models.Recette", "Recette")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecetteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recette");
                });

            modelBuilder.Entity("RecetteManager.Models.Recette", b =>
                {
                    b.HasOne("RecetteManager.Models.Categorie", "Categorie")
                        .WithMany("Recettes")
                        .HasForeignKey("CategorieId");

                    b.Navigation("Categorie");
                });

            modelBuilder.Entity("RecetteManager.Models.Categorie", b =>
                {
                    b.Navigation("Recettes");
                });

            modelBuilder.Entity("RecetteManager.Models.Recette", b =>
                {
                    b.Navigation("Commentaires");

                    b.Navigation("Etapes");

                    b.Navigation("Ingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
